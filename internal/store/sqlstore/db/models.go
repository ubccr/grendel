// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"time"

	null "github.com/guregu/null/v5"
	"github.com/segmentio/ksuid"
	"github.com/ubccr/grendel/pkg/model"
)

type Arch struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type Initrd struct {
	ID        int64     `json:"id"`
	KernelID  int64     `json:"kernel_id"`
	Path      string    `json:"path"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type Kernel struct {
	ID          int64       `json:"id"`
	UID         ksuid.KSUID `json:"uid"`
	Name        string      `json:"name"`
	Version     string      `json:"version"`
	Path        string      `json:"path"`
	ArchID      null.Int64  `json:"arch_id"`
	CommandLine null.String `json:"command_line"`
	Verify      bool        `json:"verify"`
	CreatedAt   time.Time   `json:"created_at"`
	UpdatedAt   time.Time   `json:"updated_at"`
}

type KernelTemplate struct {
	KernelID   int64 `json:"kernel_id"`
	TemplateID int64 `json:"template_id"`
}

type KernelView struct {
	ID    int64           `json:"id"`
	Name  string          `json:"name"`
	Image model.BootImage `json:"image_json"`
}

type Nic struct {
	ID      int64       `json:"id"`
	NodeID  int64       `json:"node_id"`
	NicType string      `json:"nic_type"`
	Name    null.String `json:"name"`
	VLAN    null.String `json:"vlan"`
	FQDN    null.String `json:"fqdn"`
	MAC     null.String `json:"mac"`
	IP      null.String `json:"ip"`
	Peers   null.String `json:"peers"`
	MTU     null.Int64  `json:"mtu"`
}

type Node struct {
	ID         int64       `json:"id"`
	UID        ksuid.KSUID `json:"uid"`
	Name       string      `json:"name"`
	Provision  bool        `json:"provision"`
	ArchID     null.Int64  `json:"arch_id"`
	KernelID   null.Int64  `json:"kernel_id"`
	NodeTypeID null.Int64  `json:"node_type_id"`
	Firmware   null.String `json:"firmware"`
	CreatedAt  time.Time   `json:"created_at"`
	UpdatedAt  time.Time   `json:"updated_at"`
}

type NodeTag struct {
	ID     int64  `json:"id"`
	TagID  int64  `json:"tag_id"`
	NodeID int64  `json:"node_id"`
	Value  string `json:"value"`
}

type NodeType struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type NodeView struct {
	ID   int64      `json:"id"`
	Name string     `json:"name"`
	UID  string     `json:"uid"`
	Host model.Host `json:"host_json"`
}

type Permission struct {
	ID     int64  `json:"id"`
	Method string `json:"method"`
	Path   string `json:"path"`
}

type Role struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type RolePermission struct {
	RoleID       int64 `json:"role_id"`
	PermissionID int64 `json:"permission_id"`
}

type RoleView struct {
	Name           string         `json:"name"`
	PermissionJson model.RoleView `json:"permission_json"`
}

type Tag struct {
	ID  int64  `json:"id"`
	Key string `json:"key"`
}

type Template struct {
	ID             int64     `json:"id"`
	TemplateTypeID int64     `json:"template_type_id"`
	Name           string    `json:"name"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}

type TemplateType struct {
	ID      int64  `json:"id"`
	Name    string `json:"name"`
	UriName string `json:"uri_name"`
}

type User struct {
	ID           int64     `json:"id"`
	Username     string    `json:"username"`
	RoleID       int64     `json:"role_id"`
	PasswordHash string    `json:"password_hash"`
	Enabled      bool      `json:"enabled"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}

type UserView struct {
	Username     string    `json:"username"`
	ID           int64     `json:"id"`
	PasswordHash string    `json:"password_hash"`
	Role         string    `json:"role"`
	Enabled      bool      `json:"enabled"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}
