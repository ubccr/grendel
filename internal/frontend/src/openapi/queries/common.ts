// generated with @7nohe/openapi-react-query-codegen@2.0.0-beta.3 

import { type Options } from "@hey-api/client-fetch";
import { UseQueryResult } from "@tanstack/react-query";
import { deleteV1AuthSignout, deleteV1BmcJobsJids, deleteV1BmcSel, deleteV1Images, deleteV1Nodes, deleteV1UsersUsernames, getV1Bmc, getV1BmcJobs, getV1BmcMetrics, getV1DbDump, getV1GrendelEvents, getV1Images, getV1ImagesFind, getV1Nodes, getV1NodesFind, getV1NodesTokenInterface, getV1Users, patchV1NodesImage, patchV1NodesProvision, patchV1NodesTagsAction, patchV1UsersUsernamesRole, postV1AuthSignin, postV1AuthSignup, postV1AuthToken, postV1BmcConfigureAuto, postV1BmcConfigureImport, postV1BmcPowerBmc, postV1BmcPowerOs, postV1DbRestore, postV1Images, postV1Nodes, postV1Users } from "../requests/services.gen";
export type GetV1BmcDefaultResponse = Awaited<ReturnType<typeof getV1Bmc>>["data"];
export type GetV1BmcQueryResult<TData = GetV1BmcDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1BmcKey = "GetV1Bmc";
export const UseGetV1BmcKeyFn = (clientOptions: Options<unknown, true> = {}, queryKey?: Array<unknown>) => [useGetV1BmcKey, ...(queryKey ?? [clientOptions])];
export type GetV1BmcJobsDefaultResponse = Awaited<ReturnType<typeof getV1BmcJobs>>["data"];
export type GetV1BmcJobsQueryResult<TData = GetV1BmcJobsDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1BmcJobsKey = "GetV1BmcJobs";
export const UseGetV1BmcJobsKeyFn = (clientOptions: Options<unknown, true> = {}, queryKey?: Array<unknown>) => [useGetV1BmcJobsKey, ...(queryKey ?? [clientOptions])];
export type GetV1BmcMetricsDefaultResponse = Awaited<ReturnType<typeof getV1BmcMetrics>>["data"];
export type GetV1BmcMetricsQueryResult<TData = GetV1BmcMetricsDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1BmcMetricsKey = "GetV1BmcMetrics";
export const UseGetV1BmcMetricsKeyFn = (clientOptions: Options<unknown, true> = {}, queryKey?: Array<unknown>) => [useGetV1BmcMetricsKey, ...(queryKey ?? [clientOptions])];
export type GetV1DbDumpDefaultResponse = Awaited<ReturnType<typeof getV1DbDump>>["data"];
export type GetV1DbDumpQueryResult<TData = GetV1DbDumpDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1DbDumpKey = "GetV1DbDump";
export const UseGetV1DbDumpKeyFn = (clientOptions: Options<unknown, true> = {}, queryKey?: Array<unknown>) => [useGetV1DbDumpKey, ...(queryKey ?? [clientOptions])];
export type GetV1GrendelEventsDefaultResponse = Awaited<ReturnType<typeof getV1GrendelEvents>>["data"];
export type GetV1GrendelEventsQueryResult<TData = GetV1GrendelEventsDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1GrendelEventsKey = "GetV1GrendelEvents";
export const UseGetV1GrendelEventsKeyFn = (clientOptions: Options<unknown, true> = {}, queryKey?: Array<unknown>) => [useGetV1GrendelEventsKey, ...(queryKey ?? [clientOptions])];
export type GetV1ImagesDefaultResponse = Awaited<ReturnType<typeof getV1Images>>["data"];
export type GetV1ImagesQueryResult<TData = GetV1ImagesDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1ImagesKey = "GetV1Images";
export const UseGetV1ImagesKeyFn = (clientOptions: Options<unknown, true> = {}, queryKey?: Array<unknown>) => [useGetV1ImagesKey, ...(queryKey ?? [clientOptions])];
export type GetV1ImagesFindDefaultResponse = Awaited<ReturnType<typeof getV1ImagesFind>>["data"];
export type GetV1ImagesFindQueryResult<TData = GetV1ImagesFindDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1ImagesFindKey = "GetV1ImagesFind";
export const UseGetV1ImagesFindKeyFn = (clientOptions: Options<unknown, true> = {}, queryKey?: Array<unknown>) => [useGetV1ImagesFindKey, ...(queryKey ?? [clientOptions])];
export type GetV1NodesDefaultResponse = Awaited<ReturnType<typeof getV1Nodes>>["data"];
export type GetV1NodesQueryResult<TData = GetV1NodesDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1NodesKey = "GetV1Nodes";
export const UseGetV1NodesKeyFn = (clientOptions: Options<unknown, true> = {}, queryKey?: Array<unknown>) => [useGetV1NodesKey, ...(queryKey ?? [clientOptions])];
export type GetV1NodesFindDefaultResponse = Awaited<ReturnType<typeof getV1NodesFind>>["data"];
export type GetV1NodesFindQueryResult<TData = GetV1NodesFindDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1NodesFindKey = "GetV1NodesFind";
export const UseGetV1NodesFindKeyFn = (clientOptions: Options<unknown, true> = {}, queryKey?: Array<unknown>) => [useGetV1NodesFindKey, ...(queryKey ?? [clientOptions])];
export type GetV1NodesTokenInterfaceDefaultResponse = Awaited<ReturnType<typeof getV1NodesTokenInterface>>["data"];
export type GetV1NodesTokenInterfaceQueryResult<TData = GetV1NodesTokenInterfaceDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1NodesTokenInterfaceKey = "GetV1NodesTokenInterface";
export const UseGetV1NodesTokenInterfaceKeyFn = (clientOptions: Options<unknown, true>, queryKey?: Array<unknown>) => [useGetV1NodesTokenInterfaceKey, ...(queryKey ?? [clientOptions])];
export type GetV1UsersDefaultResponse = Awaited<ReturnType<typeof getV1Users>>["data"];
export type GetV1UsersQueryResult<TData = GetV1UsersDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useGetV1UsersKey = "GetV1Users";
export const UseGetV1UsersKeyFn = (clientOptions: Options<unknown, true> = {}, queryKey?: Array<unknown>) => [useGetV1UsersKey, ...(queryKey ?? [clientOptions])];
export type PostV1AuthSigninMutationResult = Awaited<ReturnType<typeof postV1AuthSignin>>;
export const usePostV1AuthSigninKey = "PostV1AuthSignin";
export const UsePostV1AuthSigninKeyFn = (mutationKey?: Array<unknown>) => [usePostV1AuthSigninKey, ...(mutationKey ?? [])];
export type PostV1AuthSignupMutationResult = Awaited<ReturnType<typeof postV1AuthSignup>>;
export const usePostV1AuthSignupKey = "PostV1AuthSignup";
export const UsePostV1AuthSignupKeyFn = (mutationKey?: Array<unknown>) => [usePostV1AuthSignupKey, ...(mutationKey ?? [])];
export type PostV1AuthTokenMutationResult = Awaited<ReturnType<typeof postV1AuthToken>>;
export const usePostV1AuthTokenKey = "PostV1AuthToken";
export const UsePostV1AuthTokenKeyFn = (mutationKey?: Array<unknown>) => [usePostV1AuthTokenKey, ...(mutationKey ?? [])];
export type PostV1BmcConfigureAutoMutationResult = Awaited<ReturnType<typeof postV1BmcConfigureAuto>>;
export const usePostV1BmcConfigureAutoKey = "PostV1BmcConfigureAuto";
export const UsePostV1BmcConfigureAutoKeyFn = (mutationKey?: Array<unknown>) => [usePostV1BmcConfigureAutoKey, ...(mutationKey ?? [])];
export type PostV1BmcConfigureImportMutationResult = Awaited<ReturnType<typeof postV1BmcConfigureImport>>;
export const usePostV1BmcConfigureImportKey = "PostV1BmcConfigureImport";
export const UsePostV1BmcConfigureImportKeyFn = (mutationKey?: Array<unknown>) => [usePostV1BmcConfigureImportKey, ...(mutationKey ?? [])];
export type PostV1BmcPowerBmcMutationResult = Awaited<ReturnType<typeof postV1BmcPowerBmc>>;
export const usePostV1BmcPowerBmcKey = "PostV1BmcPowerBmc";
export const UsePostV1BmcPowerBmcKeyFn = (mutationKey?: Array<unknown>) => [usePostV1BmcPowerBmcKey, ...(mutationKey ?? [])];
export type PostV1BmcPowerOsMutationResult = Awaited<ReturnType<typeof postV1BmcPowerOs>>;
export const usePostV1BmcPowerOsKey = "PostV1BmcPowerOs";
export const UsePostV1BmcPowerOsKeyFn = (mutationKey?: Array<unknown>) => [usePostV1BmcPowerOsKey, ...(mutationKey ?? [])];
export type PostV1DbRestoreMutationResult = Awaited<ReturnType<typeof postV1DbRestore>>;
export const usePostV1DbRestoreKey = "PostV1DbRestore";
export const UsePostV1DbRestoreKeyFn = (mutationKey?: Array<unknown>) => [usePostV1DbRestoreKey, ...(mutationKey ?? [])];
export type PostV1ImagesMutationResult = Awaited<ReturnType<typeof postV1Images>>;
export const usePostV1ImagesKey = "PostV1Images";
export const UsePostV1ImagesKeyFn = (mutationKey?: Array<unknown>) => [usePostV1ImagesKey, ...(mutationKey ?? [])];
export type PostV1NodesMutationResult = Awaited<ReturnType<typeof postV1Nodes>>;
export const usePostV1NodesKey = "PostV1Nodes";
export const UsePostV1NodesKeyFn = (mutationKey?: Array<unknown>) => [usePostV1NodesKey, ...(mutationKey ?? [])];
export type PostV1UsersMutationResult = Awaited<ReturnType<typeof postV1Users>>;
export const usePostV1UsersKey = "PostV1Users";
export const UsePostV1UsersKeyFn = (mutationKey?: Array<unknown>) => [usePostV1UsersKey, ...(mutationKey ?? [])];
export type PatchV1NodesImageMutationResult = Awaited<ReturnType<typeof patchV1NodesImage>>;
export const usePatchV1NodesImageKey = "PatchV1NodesImage";
export const UsePatchV1NodesImageKeyFn = (mutationKey?: Array<unknown>) => [usePatchV1NodesImageKey, ...(mutationKey ?? [])];
export type PatchV1NodesProvisionMutationResult = Awaited<ReturnType<typeof patchV1NodesProvision>>;
export const usePatchV1NodesProvisionKey = "PatchV1NodesProvision";
export const UsePatchV1NodesProvisionKeyFn = (mutationKey?: Array<unknown>) => [usePatchV1NodesProvisionKey, ...(mutationKey ?? [])];
export type PatchV1NodesTagsActionMutationResult = Awaited<ReturnType<typeof patchV1NodesTagsAction>>;
export const usePatchV1NodesTagsActionKey = "PatchV1NodesTagsAction";
export const UsePatchV1NodesTagsActionKeyFn = (mutationKey?: Array<unknown>) => [usePatchV1NodesTagsActionKey, ...(mutationKey ?? [])];
export type PatchV1UsersUsernamesRoleMutationResult = Awaited<ReturnType<typeof patchV1UsersUsernamesRole>>;
export const usePatchV1UsersUsernamesRoleKey = "PatchV1UsersUsernamesRole";
export const UsePatchV1UsersUsernamesRoleKeyFn = (mutationKey?: Array<unknown>) => [usePatchV1UsersUsernamesRoleKey, ...(mutationKey ?? [])];
export type DeleteV1AuthSignoutMutationResult = Awaited<ReturnType<typeof deleteV1AuthSignout>>;
export const useDeleteV1AuthSignoutKey = "DeleteV1AuthSignout";
export const UseDeleteV1AuthSignoutKeyFn = (mutationKey?: Array<unknown>) => [useDeleteV1AuthSignoutKey, ...(mutationKey ?? [])];
export type DeleteV1BmcJobsJidsMutationResult = Awaited<ReturnType<typeof deleteV1BmcJobsJids>>;
export const useDeleteV1BmcJobsJidsKey = "DeleteV1BmcJobsJids";
export const UseDeleteV1BmcJobsJidsKeyFn = (mutationKey?: Array<unknown>) => [useDeleteV1BmcJobsJidsKey, ...(mutationKey ?? [])];
export type DeleteV1BmcSelMutationResult = Awaited<ReturnType<typeof deleteV1BmcSel>>;
export const useDeleteV1BmcSelKey = "DeleteV1BmcSel";
export const UseDeleteV1BmcSelKeyFn = (mutationKey?: Array<unknown>) => [useDeleteV1BmcSelKey, ...(mutationKey ?? [])];
export type DeleteV1ImagesMutationResult = Awaited<ReturnType<typeof deleteV1Images>>;
export const useDeleteV1ImagesKey = "DeleteV1Images";
export const UseDeleteV1ImagesKeyFn = (mutationKey?: Array<unknown>) => [useDeleteV1ImagesKey, ...(mutationKey ?? [])];
export type DeleteV1NodesMutationResult = Awaited<ReturnType<typeof deleteV1Nodes>>;
export const useDeleteV1NodesKey = "DeleteV1Nodes";
export const UseDeleteV1NodesKeyFn = (mutationKey?: Array<unknown>) => [useDeleteV1NodesKey, ...(mutationKey ?? [])];
export type DeleteV1UsersUsernamesMutationResult = Awaited<ReturnType<typeof deleteV1UsersUsernames>>;
export const useDeleteV1UsersUsernamesKey = "DeleteV1UsersUsernames";
export const UseDeleteV1UsersUsernamesKeyFn = (mutationKey?: Array<unknown>) => [useDeleteV1UsersUsernamesKey, ...(mutationKey ?? [])];
