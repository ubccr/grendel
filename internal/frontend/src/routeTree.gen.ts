/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as FloorplanRouteImport } from './routes/floorplan'
import { Route as EventsRouteImport } from './routes/events'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TemplatesIndexRouteImport } from './routes/templates/index'
import { Route as NodesIndexRouteImport } from './routes/nodes/index'
import { Route as ImagesIndexRouteImport } from './routes/images/index'
import { Route as TemplatesTemplateRouteImport } from './routes/templates/$template'
import { Route as SearchInventoryRouteImport } from './routes/search/inventory'
import { Route as RackRackRouteImport } from './routes/rack/$rack'
import { Route as NodesNodeRouteImport } from './routes/nodes/$node'
import { Route as ImagesImageRouteImport } from './routes/images/$image'
import { Route as AddTemplateRouteImport } from './routes/add/template'
import { Route as AddRoleRouteImport } from './routes/add/role'
import { Route as AddNodeRouteImport } from './routes/add/node'
import { Route as AddImageRouteImport } from './routes/add/image'
import { Route as AccountTokenRouteImport } from './routes/account/token'
import { Route as AccountSignupRouteImport } from './routes/account/signup'
import { Route as AccountSigninRouteImport } from './routes/account/signin'
import { Route as AccountResetRouteImport } from './routes/account/reset'
import { Route as GroupsNodesIndexRouteImport } from './routes/groups/nodes/index'
import { Route as AccountUsersIndexRouteImport } from './routes/account/users/index'
import { Route as AccountRolesIndexRouteImport } from './routes/account/roles/index'
import { Route as GroupsNodesGroupRouteImport } from './routes/groups/nodes/$group'
import { Route as AccountRolesRoleRouteImport } from './routes/account/roles/$role'

const FloorplanRoute = FloorplanRouteImport.update({
  id: '/floorplan',
  path: '/floorplan',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsRoute = EventsRouteImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesIndexRoute = TemplatesIndexRouteImport.update({
  id: '/templates/',
  path: '/templates/',
  getParentRoute: () => rootRouteImport,
} as any)
const NodesIndexRoute = NodesIndexRouteImport.update({
  id: '/nodes/',
  path: '/nodes/',
  getParentRoute: () => rootRouteImport,
} as any)
const ImagesIndexRoute = ImagesIndexRouteImport.update({
  id: '/images/',
  path: '/images/',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesTemplateRoute = TemplatesTemplateRouteImport.update({
  id: '/templates/$template',
  path: '/templates/$template',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchInventoryRoute = SearchInventoryRouteImport.update({
  id: '/search/inventory',
  path: '/search/inventory',
  getParentRoute: () => rootRouteImport,
} as any)
const RackRackRoute = RackRackRouteImport.update({
  id: '/rack/$rack',
  path: '/rack/$rack',
  getParentRoute: () => rootRouteImport,
} as any)
const NodesNodeRoute = NodesNodeRouteImport.update({
  id: '/nodes/$node',
  path: '/nodes/$node',
  getParentRoute: () => rootRouteImport,
} as any)
const ImagesImageRoute = ImagesImageRouteImport.update({
  id: '/images/$image',
  path: '/images/$image',
  getParentRoute: () => rootRouteImport,
} as any)
const AddTemplateRoute = AddTemplateRouteImport.update({
  id: '/add/template',
  path: '/add/template',
  getParentRoute: () => rootRouteImport,
} as any)
const AddRoleRoute = AddRoleRouteImport.update({
  id: '/add/role',
  path: '/add/role',
  getParentRoute: () => rootRouteImport,
} as any)
const AddNodeRoute = AddNodeRouteImport.update({
  id: '/add/node',
  path: '/add/node',
  getParentRoute: () => rootRouteImport,
} as any)
const AddImageRoute = AddImageRouteImport.update({
  id: '/add/image',
  path: '/add/image',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountTokenRoute = AccountTokenRouteImport.update({
  id: '/account/token',
  path: '/account/token',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountSignupRoute = AccountSignupRouteImport.update({
  id: '/account/signup',
  path: '/account/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountSigninRoute = AccountSigninRouteImport.update({
  id: '/account/signin',
  path: '/account/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountResetRoute = AccountResetRouteImport.update({
  id: '/account/reset',
  path: '/account/reset',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupsNodesIndexRoute = GroupsNodesIndexRouteImport.update({
  id: '/groups/nodes/',
  path: '/groups/nodes/',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountUsersIndexRoute = AccountUsersIndexRouteImport.update({
  id: '/account/users/',
  path: '/account/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRolesIndexRoute = AccountRolesIndexRouteImport.update({
  id: '/account/roles/',
  path: '/account/roles/',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupsNodesGroupRoute = GroupsNodesGroupRouteImport.update({
  id: '/groups/nodes/$group',
  path: '/groups/nodes/$group',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRolesRoleRoute = AccountRolesRoleRouteImport.update({
  id: '/account/roles/$role',
  path: '/account/roles/$role',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/events': typeof EventsRoute
  '/floorplan': typeof FloorplanRoute
  '/account/reset': typeof AccountResetRoute
  '/account/signin': typeof AccountSigninRoute
  '/account/signup': typeof AccountSignupRoute
  '/account/token': typeof AccountTokenRoute
  '/add/image': typeof AddImageRoute
  '/add/node': typeof AddNodeRoute
  '/add/role': typeof AddRoleRoute
  '/add/template': typeof AddTemplateRoute
  '/images/$image': typeof ImagesImageRoute
  '/nodes/$node': typeof NodesNodeRoute
  '/rack/$rack': typeof RackRackRoute
  '/search/inventory': typeof SearchInventoryRoute
  '/templates/$template': typeof TemplatesTemplateRoute
  '/images': typeof ImagesIndexRoute
  '/nodes': typeof NodesIndexRoute
  '/templates': typeof TemplatesIndexRoute
  '/account/roles/$role': typeof AccountRolesRoleRoute
  '/groups/nodes/$group': typeof GroupsNodesGroupRoute
  '/account/roles': typeof AccountRolesIndexRoute
  '/account/users': typeof AccountUsersIndexRoute
  '/groups/nodes': typeof GroupsNodesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/events': typeof EventsRoute
  '/floorplan': typeof FloorplanRoute
  '/account/reset': typeof AccountResetRoute
  '/account/signin': typeof AccountSigninRoute
  '/account/signup': typeof AccountSignupRoute
  '/account/token': typeof AccountTokenRoute
  '/add/image': typeof AddImageRoute
  '/add/node': typeof AddNodeRoute
  '/add/role': typeof AddRoleRoute
  '/add/template': typeof AddTemplateRoute
  '/images/$image': typeof ImagesImageRoute
  '/nodes/$node': typeof NodesNodeRoute
  '/rack/$rack': typeof RackRackRoute
  '/search/inventory': typeof SearchInventoryRoute
  '/templates/$template': typeof TemplatesTemplateRoute
  '/images': typeof ImagesIndexRoute
  '/nodes': typeof NodesIndexRoute
  '/templates': typeof TemplatesIndexRoute
  '/account/roles/$role': typeof AccountRolesRoleRoute
  '/groups/nodes/$group': typeof GroupsNodesGroupRoute
  '/account/roles': typeof AccountRolesIndexRoute
  '/account/users': typeof AccountUsersIndexRoute
  '/groups/nodes': typeof GroupsNodesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/events': typeof EventsRoute
  '/floorplan': typeof FloorplanRoute
  '/account/reset': typeof AccountResetRoute
  '/account/signin': typeof AccountSigninRoute
  '/account/signup': typeof AccountSignupRoute
  '/account/token': typeof AccountTokenRoute
  '/add/image': typeof AddImageRoute
  '/add/node': typeof AddNodeRoute
  '/add/role': typeof AddRoleRoute
  '/add/template': typeof AddTemplateRoute
  '/images/$image': typeof ImagesImageRoute
  '/nodes/$node': typeof NodesNodeRoute
  '/rack/$rack': typeof RackRackRoute
  '/search/inventory': typeof SearchInventoryRoute
  '/templates/$template': typeof TemplatesTemplateRoute
  '/images/': typeof ImagesIndexRoute
  '/nodes/': typeof NodesIndexRoute
  '/templates/': typeof TemplatesIndexRoute
  '/account/roles/$role': typeof AccountRolesRoleRoute
  '/groups/nodes/$group': typeof GroupsNodesGroupRoute
  '/account/roles/': typeof AccountRolesIndexRoute
  '/account/users/': typeof AccountUsersIndexRoute
  '/groups/nodes/': typeof GroupsNodesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/events'
    | '/floorplan'
    | '/account/reset'
    | '/account/signin'
    | '/account/signup'
    | '/account/token'
    | '/add/image'
    | '/add/node'
    | '/add/role'
    | '/add/template'
    | '/images/$image'
    | '/nodes/$node'
    | '/rack/$rack'
    | '/search/inventory'
    | '/templates/$template'
    | '/images'
    | '/nodes'
    | '/templates'
    | '/account/roles/$role'
    | '/groups/nodes/$group'
    | '/account/roles'
    | '/account/users'
    | '/groups/nodes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/events'
    | '/floorplan'
    | '/account/reset'
    | '/account/signin'
    | '/account/signup'
    | '/account/token'
    | '/add/image'
    | '/add/node'
    | '/add/role'
    | '/add/template'
    | '/images/$image'
    | '/nodes/$node'
    | '/rack/$rack'
    | '/search/inventory'
    | '/templates/$template'
    | '/images'
    | '/nodes'
    | '/templates'
    | '/account/roles/$role'
    | '/groups/nodes/$group'
    | '/account/roles'
    | '/account/users'
    | '/groups/nodes'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/events'
    | '/floorplan'
    | '/account/reset'
    | '/account/signin'
    | '/account/signup'
    | '/account/token'
    | '/add/image'
    | '/add/node'
    | '/add/role'
    | '/add/template'
    | '/images/$image'
    | '/nodes/$node'
    | '/rack/$rack'
    | '/search/inventory'
    | '/templates/$template'
    | '/images/'
    | '/nodes/'
    | '/templates/'
    | '/account/roles/$role'
    | '/groups/nodes/$group'
    | '/account/roles/'
    | '/account/users/'
    | '/groups/nodes/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  EventsRoute: typeof EventsRoute
  FloorplanRoute: typeof FloorplanRoute
  AccountResetRoute: typeof AccountResetRoute
  AccountSigninRoute: typeof AccountSigninRoute
  AccountSignupRoute: typeof AccountSignupRoute
  AccountTokenRoute: typeof AccountTokenRoute
  AddImageRoute: typeof AddImageRoute
  AddNodeRoute: typeof AddNodeRoute
  AddRoleRoute: typeof AddRoleRoute
  AddTemplateRoute: typeof AddTemplateRoute
  ImagesImageRoute: typeof ImagesImageRoute
  NodesNodeRoute: typeof NodesNodeRoute
  RackRackRoute: typeof RackRackRoute
  SearchInventoryRoute: typeof SearchInventoryRoute
  TemplatesTemplateRoute: typeof TemplatesTemplateRoute
  ImagesIndexRoute: typeof ImagesIndexRoute
  NodesIndexRoute: typeof NodesIndexRoute
  TemplatesIndexRoute: typeof TemplatesIndexRoute
  AccountRolesRoleRoute: typeof AccountRolesRoleRoute
  GroupsNodesGroupRoute: typeof GroupsNodesGroupRoute
  AccountRolesIndexRoute: typeof AccountRolesIndexRoute
  AccountUsersIndexRoute: typeof AccountUsersIndexRoute
  GroupsNodesIndexRoute: typeof GroupsNodesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/floorplan': {
      id: '/floorplan'
      path: '/floorplan'
      fullPath: '/floorplan'
      preLoaderRoute: typeof FloorplanRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates/': {
      id: '/templates/'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nodes/': {
      id: '/nodes/'
      path: '/nodes'
      fullPath: '/nodes'
      preLoaderRoute: typeof NodesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/images/': {
      id: '/images/'
      path: '/images'
      fullPath: '/images'
      preLoaderRoute: typeof ImagesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates/$template': {
      id: '/templates/$template'
      path: '/templates/$template'
      fullPath: '/templates/$template'
      preLoaderRoute: typeof TemplatesTemplateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search/inventory': {
      id: '/search/inventory'
      path: '/search/inventory'
      fullPath: '/search/inventory'
      preLoaderRoute: typeof SearchInventoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rack/$rack': {
      id: '/rack/$rack'
      path: '/rack/$rack'
      fullPath: '/rack/$rack'
      preLoaderRoute: typeof RackRackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nodes/$node': {
      id: '/nodes/$node'
      path: '/nodes/$node'
      fullPath: '/nodes/$node'
      preLoaderRoute: typeof NodesNodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/images/$image': {
      id: '/images/$image'
      path: '/images/$image'
      fullPath: '/images/$image'
      preLoaderRoute: typeof ImagesImageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add/template': {
      id: '/add/template'
      path: '/add/template'
      fullPath: '/add/template'
      preLoaderRoute: typeof AddTemplateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add/role': {
      id: '/add/role'
      path: '/add/role'
      fullPath: '/add/role'
      preLoaderRoute: typeof AddRoleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add/node': {
      id: '/add/node'
      path: '/add/node'
      fullPath: '/add/node'
      preLoaderRoute: typeof AddNodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add/image': {
      id: '/add/image'
      path: '/add/image'
      fullPath: '/add/image'
      preLoaderRoute: typeof AddImageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/token': {
      id: '/account/token'
      path: '/account/token'
      fullPath: '/account/token'
      preLoaderRoute: typeof AccountTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/signup': {
      id: '/account/signup'
      path: '/account/signup'
      fullPath: '/account/signup'
      preLoaderRoute: typeof AccountSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/signin': {
      id: '/account/signin'
      path: '/account/signin'
      fullPath: '/account/signin'
      preLoaderRoute: typeof AccountSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/reset': {
      id: '/account/reset'
      path: '/account/reset'
      fullPath: '/account/reset'
      preLoaderRoute: typeof AccountResetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/groups/nodes/': {
      id: '/groups/nodes/'
      path: '/groups/nodes'
      fullPath: '/groups/nodes'
      preLoaderRoute: typeof GroupsNodesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/users/': {
      id: '/account/users/'
      path: '/account/users'
      fullPath: '/account/users'
      preLoaderRoute: typeof AccountUsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/roles/': {
      id: '/account/roles/'
      path: '/account/roles'
      fullPath: '/account/roles'
      preLoaderRoute: typeof AccountRolesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/groups/nodes/$group': {
      id: '/groups/nodes/$group'
      path: '/groups/nodes/$group'
      fullPath: '/groups/nodes/$group'
      preLoaderRoute: typeof GroupsNodesGroupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/roles/$role': {
      id: '/account/roles/$role'
      path: '/account/roles/$role'
      fullPath: '/account/roles/$role'
      preLoaderRoute: typeof AccountRolesRoleRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  EventsRoute: EventsRoute,
  FloorplanRoute: FloorplanRoute,
  AccountResetRoute: AccountResetRoute,
  AccountSigninRoute: AccountSigninRoute,
  AccountSignupRoute: AccountSignupRoute,
  AccountTokenRoute: AccountTokenRoute,
  AddImageRoute: AddImageRoute,
  AddNodeRoute: AddNodeRoute,
  AddRoleRoute: AddRoleRoute,
  AddTemplateRoute: AddTemplateRoute,
  ImagesImageRoute: ImagesImageRoute,
  NodesNodeRoute: NodesNodeRoute,
  RackRackRoute: RackRackRoute,
  SearchInventoryRoute: SearchInventoryRoute,
  TemplatesTemplateRoute: TemplatesTemplateRoute,
  ImagesIndexRoute: ImagesIndexRoute,
  NodesIndexRoute: NodesIndexRoute,
  TemplatesIndexRoute: TemplatesIndexRoute,
  AccountRolesRoleRoute: AccountRolesRoleRoute,
  GroupsNodesGroupRoute: GroupsNodesGroupRoute,
  AccountRolesIndexRoute: AccountRolesIndexRoute,
  AccountUsersIndexRoute: AccountUsersIndexRoute,
  GroupsNodesIndexRoute: GroupsNodesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
