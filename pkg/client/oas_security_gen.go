// Code generated by ogen, DO NOT EDIT.

package client

import (
	"context"
	"net/http"

	"github.com/go-faster/errors"
)

// SecuritySource is provider of security values (tokens, passwords, etc.).
type SecuritySource interface {
	// CookieAuth provides cookieAuth security value.
	// API key cookie authentication.
	CookieAuth(ctx context.Context, operationName OperationName, client *Client) (CookieAuth, error)
	// HeaderAuth provides headerAuth security value.
	// API key header authentication.
	HeaderAuth(ctx context.Context, operationName OperationName, client *Client) (HeaderAuth, error)
}

func (s *Client) securityCookieAuth(ctx context.Context, operationName OperationName, req *http.Request) error {
	t, err := s.sec.CookieAuth(ctx, operationName, s)
	if err != nil {
		return errors.Wrap(err, "security source \"CookieAuth\"")
	}
	req.Header.Set("Authorization", "Bearer "+t.Token)
	return nil
}
func (s *Client) securityHeaderAuth(ctx context.Context, operationName OperationName, req *http.Request) error {
	t, err := s.sec.HeaderAuth(ctx, operationName, s)
	if err != nil {
		return errors.Wrap(err, "security source \"HeaderAuth\"")
	}
	req.Header.Set("Authorization", "Bearer "+t.Token)
	return nil
}
