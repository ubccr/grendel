// Code generated by ogen, DO NOT EDIT.

package client

// DELETEV1AuthSignoutParams is parameters of DELETE_/v1/auth/signout operation.
type DELETEV1AuthSignoutParams struct {
	Accept OptString
}

// DELETEV1BmcJobsJidsParams is parameters of DELETE_/v1/bmc/jobs/:jids operation.
type DELETEV1BmcJobsJidsParams struct {
	// Redfish Job IDs. Use 'JID_CLEARALL' to clear all jobs.
	Jids string
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// DELETEV1BmcSelParams is parameters of DELETE_/v1/bmc/sel operation.
type DELETEV1BmcSelParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// DELETEV1ImagesParams is parameters of DELETE_/v1/images operation.
type DELETEV1ImagesParams struct {
	// Filter by name.
	Names  OptString
	Accept OptString
}

// DELETEV1NodesParams is parameters of DELETE_/v1/nodes operation.
type DELETEV1NodesParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// DELETEV1UsersUsernamesParams is parameters of DELETE_/v1/users/:usernames operation.
type DELETEV1UsersUsernamesParams struct {
	// Target usernames.
	Usernames string
	Accept    OptString
}

// GETV1BmcParams is parameters of GET_/v1/bmc operation.
type GETV1BmcParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// GETV1BmcJobsParams is parameters of GET_/v1/bmc/jobs operation.
type GETV1BmcJobsParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// GETV1BmcMetricsParams is parameters of GET_/v1/bmc/metrics operation.
type GETV1BmcMetricsParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// GETV1DbDumpParams is parameters of GET_/v1/db/dump operation.
type GETV1DbDumpParams struct {
	Accept OptString
}

// GETV1GrendelEventsParams is parameters of GET_/v1/grendel/events operation.
type GETV1GrendelEventsParams struct {
	Accept OptString
}

// GETV1ImagesParams is parameters of GET_/v1/images operation.
type GETV1ImagesParams struct {
	Accept OptString
}

// GETV1ImagesFindParams is parameters of GET_/v1/images/find operation.
type GETV1ImagesFindParams struct {
	// Filter by name.
	Names  OptString
	Accept OptString
}

// GETV1NodesParams is parameters of GET_/v1/nodes operation.
type GETV1NodesParams struct {
	Accept OptString
}

// GETV1NodesFindParams is parameters of GET_/v1/nodes/find operation.
type GETV1NodesFindParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// GETV1NodesTokenInterfaceParams is parameters of GET_/v1/nodes/token/:interface operation.
type GETV1NodesTokenInterfaceParams struct {
	// Interface token will be created for.
	Interface string
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// GETV1UsersParams is parameters of GET_/v1/users operation.
type GETV1UsersParams struct {
	Accept OptString
}

// PATCHV1NodesImageParams is parameters of PATCH_/v1/nodes/image operation.
type PATCHV1NodesImageParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// PATCHV1NodesProvisionParams is parameters of PATCH_/v1/nodes/provision operation.
type PATCHV1NodesProvisionParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// PATCHV1NodesTagsActionParams is parameters of PATCH_/v1/nodes/tags/:action operation.
type PATCHV1NodesTagsActionParams struct {
	// Option to add or remove tags.
	Action string
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// PATCHV1UsersUsernamesRoleParams is parameters of PATCH_/v1/users/:usernames/role operation.
type PATCHV1UsersUsernamesRoleParams struct {
	// Target usernames.
	Usernames string
	Accept    OptString
}

// POSTV1AuthSigninParams is parameters of POST_/v1/auth/signin operation.
type POSTV1AuthSigninParams struct {
	Accept OptString
}

// POSTV1AuthSignupParams is parameters of POST_/v1/auth/signup operation.
type POSTV1AuthSignupParams struct {
	Accept OptString
}

// POSTV1AuthTokenParams is parameters of POST_/v1/auth/token operation.
type POSTV1AuthTokenParams struct {
	Accept OptString
}

// POSTV1BmcConfigureAutoParams is parameters of POST_/v1/bmc/configure/auto operation.
type POSTV1BmcConfigureAutoParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// POSTV1BmcConfigureImportParams is parameters of POST_/v1/bmc/configure/import operation.
type POSTV1BmcConfigureImportParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// POSTV1BmcPowerBmcParams is parameters of POST_/v1/bmc/power/bmc operation.
type POSTV1BmcPowerBmcParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// POSTV1BmcPowerOsParams is parameters of POST_/v1/bmc/power/os operation.
type POSTV1BmcPowerOsParams struct {
	// Filter by nodeset. Minimum of one query parameter is required.
	Nodeset OptString
	// Filter by tags. Minimum of one query parameter is required.
	Tags   OptString
	Accept OptString
}

// POSTV1DbRestoreParams is parameters of POST_/v1/db/restore operation.
type POSTV1DbRestoreParams struct {
	Accept OptString
}

// POSTV1ImagesParams is parameters of POST_/v1/images operation.
type POSTV1ImagesParams struct {
	Accept OptString
}

// POSTV1NodesParams is parameters of POST_/v1/nodes operation.
type POSTV1NodesParams struct {
	Accept OptString
}

// POSTV1UsersParams is parameters of POST_/v1/users operation.
type POSTV1UsersParams struct {
	Accept OptString
}
